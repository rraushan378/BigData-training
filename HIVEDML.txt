

HIVE DML OPERATIONS

1. HIVE SUPPORTS DML OPERATIONS ONLY ON ORC FORMAT FILES.
DML (DATA MANUPLATION) --> INSERT, UPDATE, DELETE

2. ORC IS OPTIMIZED ROW COLUMNAR FORMAT.
IT IS APACHE OPEN SOURCE FORMAT.
SIMILAR TO COLUMNAR FORMAT.
DATA IS STORED AS STRIPES, WHICH CONTAINS THE INDEX, ROW DATA, STRIPE FOOTER AND MAPPED TO THE COLUMNS
DEFAULT SIZE OF THE STRIPE IS 250MB.
CONTAINS POSTSCRIPT WHICH HOLDS THE ENTIRE METADATA.

3. USING ORC FORMAT WE CAN PERFORM ACID OPERATIONS ON HIVE TABLE.
ACID --> ATOMICITY, CONSISTENCY, ISOLATION, AND DURABILITY

4. THERE IS NO COMMIT OR ROLLBACK.

5. EVEN THE FILE IS ORC WE CANNOT PERFORM DML OPERATIONS ON THE TABLE UNLESS WE SET SOME PRE-REQS.

A. CONCURRENCY PROPERTY MUST BE SET TO TRUE.
B. TRANSACTION MANAGER MUST BE ENABLED USING org.apache
C. DYNAMIC PARTITION MODE MUST BE SET TO "NONSTRICT"
D. WE HAVE TO SET TBLPROPERTIES AS "transactional" = "true" FOR THE TABLE ON WHICH WE NEED DML OPERATIONS.
E. TABLE MUST HAVE BUCKETS.


EXAMPLE:

hive> 
SET hive.support.concurrency=true;
SET hive.txn.manager=org.apache.hadoop.hive.ql.lockmgr.DbTxnManager;
SET hive.exec.dynamic.partition.mode=nonstrict;

CREATE TABLE EMPDMLS(EMPNO int, ENAME string, JOB string, MGR int, HIREDATE string, SALARY int, COMM int, DEPTNO int)
CLUSTERED BY(empno) INTO 2 BUCKETS
STORED AS ORC
TBLPROPERTIES("transactional"="true");

NOTE: TRANSACTIONAL TABLES CANNOT BE CREATED AS EXTERNAL TABLES.

INSERT INTO EMPDMLS SELECT * FROM EMP;






























